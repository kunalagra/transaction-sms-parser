(function(c,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(c=typeof globalThis<"u"?globalThis:c||self,i(c["transaction-sms-parser"]={}))})(this,function(c){"use strict";var i=(t=>(t.CARD="CARD",t.WALLET="WALLET",t.ACCOUNT="ACCOUNT",t))(i||{}),u=(t=>(t.AVAILABLE="AVAILABLE",t.OUTSTANDING="OUTSTANDING",t))(u||{});const y=["avbl bal","available balance","available limit","available credit limit","limit available","a/c bal","ac bal","available bal","avl bal","updated balance","total balance","new balance","bal","avl lmt","available"],N=["outstanding"],I=["paytm","simpl","lazypay","amazon_pay"],w=["upi","ref no","upi ref","upi ref no","refno","transaction number"],h=[{regex:/credit\scard/g,word:"c_card",type:i.CARD},{regex:/amazon\spay/g,word:"amazon_pay",type:i.WALLET},{regex:/uni\scard/g,word:"uni_card",type:i.CARD},{regex:/niyo\scard/g,word:"niyo",type:i.ACCOUNT},{regex:/slice\scard/g,word:"slice_card",type:i.CARD},{regex:/one\s*card/g,word:"one_card",type:i.CARD}],O=t=>!Number.isNaN(Number(t)),B=t=>{const[e,s]=[t[0],t[t.length-1]];let n=Number.isNaN(Number(s))?t.slice(0,-1):t;return n=Number.isNaN(Number(e))?n.slice(1):n,n},D=t=>{const e=t.replace("ac","");return Number.isNaN(Number(e))?"":e},A=t=>{let e=t.toLowerCase();return e=e.replace(/-/g,""),e=e.replace(/!/g,""),e=e.replace(/:/g," "),e=e.replace(/\//g,""),e=e.replace(/=/g," "),e=e.replace(/[{}]/g," "),e=e.replace(/\n/g," "),e=e.replace(/\r/g," "),e=e.replace(/ending /g,""),e=e.replace(/x|[*]/g,""),e=e.replace(/is /g,""),e=e.replace(/with /g,""),e=e.replace(/no. /g,""),e=e.replace(/\bac\b|\bacct\b|\baccount\b/g,"ac"),e=e.replace(/â‚¹(?=\s*\d+)/g,"rs. "),e=e.replace(/by(?=\s*\d+)/g,"rs. "),e=e.replace(/rs(?=\w)/g,"rs. "),e=e.replace(/rs /g,"rs. "),e=e.replace(/inr(?=\w)/g,"rs. "),e=e.replace(/inr /g,"rs. "),e=e.replace(/rs. /g,"rs."),e=e.replace(/rs.(?=\w)/g,"rs. "),e=e.replace(/debited/g," debited "),e=e.replace(/credited/g," credited "),h.forEach(s=>{e=e.replace(s.regex,s.word)}),e.split(" ").filter(s=>s!=="")},g=t=>{let e=[];return typeof t=="string"?e=A(t):e=t,e},p=t=>{const[e,s]=t.split(".");return`${e}.${(s??"").padEnd(2,"0")}`},E=(t,e,s=1)=>{const r=t.split(e,2)[1];if(r){const a=/[^0-9a-zA-Z]+/gi;return r.trim().split(a,s).join(" ")}return""},M=t=>{let e="";const s=t.findIndex(r=>r==="card"||h.filter(a=>a.type===i.CARD).some(a=>a.word===r?(e=a.word,!0):!1)),n={type:null,name:null,number:null};return s!==-1?(n.number=t[s+1],n.type=i.CARD,Number.isNaN(Number(n.number))?{type:e?n.type:null,name:e,number:null}:n):{type:null,name:null,number:null}},x=t=>{const e=g(t);let s=-1,n={type:null,name:null,number:null};for(const[r,a]of e.entries())if(a==="ac")if(r+1<e.length){const o=B(e[r+1]);if(Number.isNaN(Number(o)))continue;s=r,n.type=i.ACCOUNT,n.number=o;break}else continue;else if(a.includes("ac")){const o=D(a);if(o==="")continue;s=r,n.type=i.ACCOUNT,n.number=o;break}if(s===-1&&(n=M(e)),!n.type){const r=e.find(a=>I.includes(a));r&&(n.type=i.WALLET,n.name=r)}if(!n.type){const r=h.filter(a=>a.type===i.ACCOUNT).find(a=>e.includes(a.word));n.type=(r==null?void 0:r.type)??null,n.name=(r==null?void 0:r.word)??null}return n.number&&n.number.length>4&&(n.number=n.number.slice(-4)),n},R=(t,e,s)=>{let n="",r=!1,a=0,o="",l=t;for(;l<s;){if(o=e[l],o>="0"&&o<="9")r=!0,n+=o;else if(r){if(o==="."){if(a===1)break;n+=o,a+=1}else if(o!==",")break}l+=1}return n},S=(t,e=u.AVAILABLE)=>{const n=`(${(e===u.AVAILABLE?y:N).join("|")})`.replace("/","\\/"),r="([\\d]+\\.[\\d]+|[\\d]+)";let a=new RegExp(`${n}\\s*${r}`,"gi"),o=t.match(a);if(o&&o.length>0){const l=o[0].split(" ").pop();return Number.isNaN(Number(l))?"":l}if(a=new RegExp(`${r}\\s*${n}`,"gi"),o=t.match(a),o&&o.length>0){const l=o[0].split(" ")[0];return Number.isNaN(Number(l))?"":l}return null},m=(t,e=u.AVAILABLE)=>{const n=g(t).join(" ");let r=-1,a="";const o=e===u.AVAILABLE?y:N;for(const b of o)if(r=n.indexOf(b),r!==-1){r+=b.length;break}else continue;let l=r,d=-1,f=n.substr(l,3);for(l+=3;l<n.length;){if(f=f.slice(1),f+=n[l],f==="rs."){d=l+2;break}l+=1}return d===-1?(a=S(n)??"",a?p(a):null):(a=R(d,n,n.length),a?p(a):null)},v=t=>{const e=g(t),s=e.join(" "),n={merchant:null,referenceNo:null};if(e.includes("vpa")){const a=e.indexOf("vpa");if(a<e.length-1){const o=e[a+1],[l]=o.replaceAll(/\(|\)/gi," ").split(" ");n.merchant=l}}let r="";for(let a=0;a<w.length;a+=1){const o=w[a];s.indexOf(o)>0&&(r=o)}if(r){const a=E(s,r);if(O(a))n.referenceNo=a;else if(n.merchant){const[o]=a.split(/[^0-9]/gi).sort((l,d)=>d.length-l.length)[0];o&&(n.referenceNo=o)}else n.merchant=a}return n},T=t=>{const s=g(t).indexOf("rs.");if(s===-1)return"";let n=t[s+1];return n=n.replace(/,/g,""),Number.isNaN(Number(n))?(n=t[s+2],n=n==null?void 0:n.replace(/,/g,""),Number.isNaN(Number(n))?"":p(n)):p(n)},C=t=>{const e=/(?:credited|credit|deposited|received\srs|added|received|refund|repayment)/gi,s=/(?:debited|debit|deducted)/gi,n=/(?:payment|spent|paid|used\s+at|charged|sent\srs|transaction\son|transaction\sfee|tran|booked|purchased|sent\s+to|purchase\s+of)/gi,r=typeof t!="string"?t.join(" "):t;return s.test(r)?"debit":e.test(r)?"credit":n.test(r)?"debit":null},L=t=>{const e=g(t);let s=e.indexOf("to");if(s===-1&&(s=e.indexOf("from"),s===-1))return null;const n=t[s+1];return["i","me","my","myself","we","our","ours","ourselves","you","you're","you've","you'll","you'd","your","yours","yourself","yourselves","he","him","his","himself","she","she's","her","hers","herself","it","it's","its","itself","they","them","their","theirs","themselves","what","which","who","whom","this","that","that'll","these","those","am","is","are","was","were","be","been","being","have","has","had","having","do","does","did","doing","a","an","the","and","but","if","or","because","as","until","while","of","at","by","for","with","about","against","between","into","through","during","before","after","above","below","to","from","up","down","in","out","on","off","over","under","again","further","then","once","here","there","when","where","why","how","all","any","both","each","few","more","most","other","some","such","no","nor","not","only","own","same","so","than","too","very","s","t","can","will","just","don","don't","should","should've","now","d","ll","m","o","re","ve","y","ain","aren","aren't","couldn","couldn't","didn","didn't","doesn","doesn't","hadn","hadn't","hasn","hasn't","haven","haven't","isn","isn't","ma","mightn","mightn't","mustn","mustn't","needn","needn't","shan","shan't","shouldn","shouldn't","wasn","wasn't","weren","weren't","won","won't","wouldn","wouldn't","kotak","canara","sbi","au"].includes(n)?null:n},k=t=>{if(!t||typeof t!="string")return{account:{type:null,number:null,name:null},balance:null,transaction:{type:null,amount:null,merchant:null,referenceNo:null,detail:null}};const e=A(t),s=x(e),n=m(e,u.AVAILABLE),r=T(e),o=[n,r,s.number].filter(K=>K!=="").length>=2?C(e):null,l={available:n,outstanding:null};s&&s.type===i.CARD&&(l.outstanding=m(e,u.OUTSTANDING));const d=L(e),{merchant:f,referenceNo:b}=v(t);return{account:s,balance:l,transaction:{type:o,amount:r,merchant:f,referenceNo:b,detail:d}}},V=x,U=m,j=v;c.IAccountType=i,c.IBalanceKeyWordsType=u,c.getAccountInfo=V,c.getBalanceInfo=U,c.getMerchantInfo=j,c.getTransactionAmount=T,c.getTransactionDetails=L,c.getTransactionInfo=k,c.getTransactionType=C,Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});
