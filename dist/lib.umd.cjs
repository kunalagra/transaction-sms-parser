(function(o,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(o=typeof globalThis<"u"?globalThis:o||self,i(o["transaction-sms-parser"]={}))})(this,function(o){"use strict";var i=(t=>(t.CARD="CARD",t.WALLET="WALLET",t.ACCOUNT="ACCOUNT",t))(i||{}),u=(t=>(t.AVAILABLE="AVAILABLE",t.OUTSTANDING="OUTSTANDING",t))(u||{});const y=["avbl bal","available balance","available limit","available credit limit","limit available","a/c bal","ac bal","available bal","avl bal","updated balance","total balance","new balance","bal","avl lmt","available"],A=["outstanding"],v=["paytm","simpl","lazypay","amazon_pay"],h=["upi","ref no","upi ref","upi ref no","refno","transaction number"],m=[{regex:/credit\scard/g,word:"c_card",type:i.CARD},{regex:/amazon\spay/g,word:"amazon_pay",type:i.WALLET},{regex:/uni\scard/g,word:"uni_card",type:i.CARD},{regex:/niyo\scard/g,word:"niyo",type:i.ACCOUNT},{regex:/slice\scard/g,word:"slice_card",type:i.CARD},{regex:/one\s*card/g,word:"one_card",type:i.CARD}],O=t=>!Number.isNaN(Number(t)),B=t=>{const[e,c]=[t[0],t[t.length-1]];let n=Number.isNaN(Number(c))?t.slice(0,-1):t;return n=Number.isNaN(Number(e))?n.slice(1):n,n},D=t=>{const e=t.replace("ac","");return Number.isNaN(Number(e))?"":e},x=t=>{let e=t.toLowerCase();return e=e.replace(/-/g,""),e=e.replace(/!/g,""),e=e.replace(/:/g," "),e=e.replace(/\//g,""),e=e.replace(/=/g," "),e=e.replace(/[{}]/g," "),e=e.replace(/\n/g," "),e=e.replace(/\r/g," "),e=e.replace(/ending /g,""),e=e.replace(/x|[*]/g,""),e=e.replace(/is /g,""),e=e.replace(/with /g,""),e=e.replace(/no. /g,""),e=e.replace(/\bac\b|\bacct\b|\baccount\b/g,"ac"),e=e.replace(/â‚¹(?=\s*\d+)/g,"rs. "),e=e.replace(/by(?=\s*\d+)/g,"rs. "),e=e.replace(/rs(?=\w)/g,"rs. "),e=e.replace(/rs /g,"rs. "),e=e.replace(/inr(?=\w)/g,"rs. "),e=e.replace(/inr /g,"rs. "),e=e.replace(/rs. /g,"rs."),e=e.replace(/rs.(?=\w)/g,"rs. "),e=e.replace(/debited/g," debited "),e=e.replace(/credited/g," credited "),m.forEach(c=>{e=e.replace(c.regex,c.word)}),e.split(" ").filter(c=>c!=="")},f=t=>{let e=[];return typeof t=="string"?e=x(t):e=t,e},g=t=>{const[e,c]=t.split(".");return`${e}.${(c??"").padEnd(2,"0")}`},E=(t,e,c=1)=>{const r=t.split(e,2)[1];if(r){const a=/[^0-9a-zA-Z]+/gi;return r.trim().split(a,c).join(" ")}return""},M=t=>{let e="";const c=t.findIndex(r=>r==="card"||m.filter(a=>a.type===i.CARD).some(a=>a.word===r?(e=a.word,!0):!1)),n={type:null,name:null,number:null};return c!==-1?(n.number=t[c+1],n.type=i.CARD,Number.isNaN(Number(n.number))?{type:e?n.type:null,name:e,number:null}:n):{type:null,name:null,number:null}},w=t=>{const e=f(t);let c=-1,n={type:null,name:null,number:null};for(const[r,a]of e.entries())if(a==="ac")if(r+1<e.length){const s=B(e[r+1]);if(Number.isNaN(Number(s)))continue;c=r,n.type=i.ACCOUNT,n.number=s;break}else continue;else if(a.includes("ac")){const s=D(a);if(s==="")continue;c=r,n.type=i.ACCOUNT,n.number=s;break}if(c===-1&&(n=M(e)),!n.type){const r=e.find(a=>v.includes(a));r&&(n.type=i.WALLET,n.name=r)}if(!n.type){const r=m.filter(a=>a.type===i.ACCOUNT).find(a=>e.includes(a.word));n.type=(r==null?void 0:r.type)??null,n.name=(r==null?void 0:r.word)??null}return n.number&&n.number.length>4&&(n.number=n.number.slice(-4)),n},R=(t,e,c)=>{let n="",r=!1,a=0,s="",l=t;for(;l<c;){if(s=e[l],s>="0"&&s<="9")r=!0,n+=s;else if(r){if(s==="."){if(a===1)break;n+=s,a+=1}else if(s!==",")break}l+=1}return n},S=(t,e=u.AVAILABLE)=>{const n=`(${(e===u.AVAILABLE?y:A).join("|")})`.replace("/","\\/"),r="([\\d]+\\.[\\d]+|[\\d]+)";let a=new RegExp(`${n}\\s*${r}`,"gi"),s=t.match(a);if(s&&s.length>0){const l=s[0].split(" ").pop();return Number.isNaN(Number(l))?"":l}if(a=new RegExp(`${r}\\s*${n}`,"gi"),s=t.match(a),s&&s.length>0){const l=s[0].split(" ")[0];return Number.isNaN(Number(l))?"":l}return null},N=(t,e=u.AVAILABLE)=>{const n=f(t).join(" ");let r=-1,a="";const s=e===u.AVAILABLE?y:A;for(const b of s)if(r=n.indexOf(b),r!==-1){r+=b.length;break}else continue;let l=r,d=-1,p=n.substr(l,3);for(l+=3;l<n.length;){if(p=p.slice(1),p+=n[l],p==="rs."){d=l+2;break}l+=1}return d===-1?(a=S(n)??"",a?g(a):null):(a=R(d,n,n.length),a?g(a):null)},T=t=>{const e=f(t),c=e.join(" "),n={merchant:null,referenceNo:null};if(e.includes("vpa")){const a=e.indexOf("vpa");if(a<e.length-1){const s=e[a+1],[l]=s.replaceAll(/\(|\)/gi," ").split(" ");n.merchant=l}}let r="";for(let a=0;a<h.length;a+=1){const s=h[a];c.indexOf(s)>0&&(r=s)}if(r){const a=E(c,r);if(O(a))n.referenceNo=a;else if(n.merchant){const[s]=a.split(/[^0-9]/gi).sort((l,d)=>d.length-l.length)[0];s&&(n.referenceNo=s)}else n.merchant=a}return n},C=t=>{const c=f(t).indexOf("rs.");if(c===-1)return"";let n=t[c+1];return n=n.replace(/,/g,""),Number.isNaN(Number(n))?(n=t[c+2],n=n==null?void 0:n.replace(/,/g,""),Number.isNaN(Number(n))?"":g(n)):g(n)},L=t=>{const e=/(?:credited|credit|deposited|received\srs|added|received|refund|repayment)/gi,c=/(?:debited|debit|deducted)/gi,n=/(?:payment|spent|paid|used\s+at|charged|sent\srs|transaction\son|transaction\sfee|tran|booked|purchased|sent\s+to|purchase\s+of)/gi,r=typeof t!="string"?t.join(" "):t;return c.test(r)?"debit":e.test(r)?"credit":n.test(r)?"debit":null},I=t=>{const e=f(t);let c=e.indexOf("to");if(c===-1&&(c=e.indexOf("from"),c===-1))return null;const n=t[c+1];return["kotak","your","bank","sbi","canara"].includes(n)?null:n},k=t=>{if(!t||typeof t!="string")return{account:{type:null,number:null,name:null},balance:null,transaction:{type:null,amount:null,merchant:null,referenceNo:null,detail:null}};const e=x(t),c=w(e),n=N(e,u.AVAILABLE),r=C(e),s=[n,r,c.number].filter(j=>j!=="").length>=2?L(e):null,l={available:n,outstanding:null};c&&c.type===i.CARD&&(l.outstanding=N(e,u.OUTSTANDING));const d=I(e),{merchant:p,referenceNo:b}=T(t);return{account:c,balance:l,transaction:{type:s,amount:r,merchant:p,referenceNo:b,detail:d}}},V=w,U=N,K=T;o.IAccountType=i,o.IBalanceKeyWordsType=u,o.getAccountInfo=V,o.getBalanceInfo=U,o.getMerchantInfo=K,o.getTransactionAmount=C,o.getTransactionDetails=I,o.getTransactionInfo=k,o.getTransactionType=L,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
